<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.cqupt.dao.PrintFileDao">

    <!--添加文件-->
    <insert id="addPrintFile" parameterType="PrintFile" useGeneratedKeys="true" keyProperty="id">
        insert into t_printfile (filename, type, number, path, sha1,
            overduetime, status, iscolorful, isdelete, price, pages)
          values (#{filename}, #{type}, #{number}, #{path}, #{sha1},
            #{overdueTime}, #{status}, #{isColorful}, #{isDelete}, #{price}, #{pages});
    </insert>

    <!--添加文件时需要添加关联-->
    <insert id="addTUP" parameterType="java.util.Map">
        insert into t_user_printfile (u_id, p_id)
          values (#{uid}, #{pid})
    </insert>

    <!--当且仅当文件只被一个用户使用使用时才删除文件-->
    <delete id="deletePrintFile" parameterType="int">
        delete from t_printfile where id=#{pid}
    </delete>

    <!--删除文件后需要删除关联-->
    <delete id="deleteTUP" parameterType="java.util.Map">
        delete from t_user_printfile where u_id=#{uid} and p_id=#{pid}
    </delete>

    <!--根据被删除文件删除该文件下所有用户关联-->
    <delete id="deleteUidsByPid" parameterType="int">
        delete from t_user_printfile where p_id=#{pid}
    </delete>

    <!--更新文件-->
    <update id="updatePrintFile" parameterType="PrintFile">
        update t_printfile
          set number=#{number}, path=#{path}, iscolorful=#{isColorful},
          filename=#{filename},type=#{type}, overduetime=#{overdueTime},
          status=#{status}, isdelete=#{isDelete}, price=#{price}
          where id=#{id}
    </update>

    <!--根据id查找文件-->
    <select id="loadPrintFile" resultType="PrintFile">
        select * from t_printfile where id=#{pid}
    </select>
    <!--根据sha1查找文件，确保一个文件只有一个-->
    <select id="loadPrintFileBySHA1" resultType="PrintFile">
        select * from t_printfile where sha1=#{sha1}
    </select>

    <!--根据uid和pid查找pid，如果存在则不添加关联-->
    <select id="loadPidByUid" parameterType="java.util.Map" resultType="String">
        select p_id from t_user_printfile where u_id=#{uid} and p_id=#{pid}
    </select>
    <!--根据文件id查找所有用户-->
    <select id="loadUidsByPid" parameterType="int" resultType="String">
        select u_id from t_user_printfile where p_id=#{pid}
    </select>


    <select id="findPrintFiles" parameterType="java.util.Map" resultType="PrintFile">
        select t1.*
          from t_printfile t1
          right join t_user_printfile t2
          on (t1.id = t2.p_id)
          where t2.u_id = #{uid}
          and t1.status=#{status}
          ORDER BY t1.overduetime desc
		  limit #{rows},#{offset};
    </select>
    <select id="findPrintFilesCount" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*)
          FROM t_printfile t1
          right join t_user_printfile t2
          on (t1.id = t2.p_id)
          where t2.u_id = #{uid}
          and t1.status=#{status};
    </select>


    <!-- 定时删除任务-->
    <!--找到已打印且立即删除的文件ids-->
    <select id="findPidsPrinted" parameterType="java.util.Map" resultType="int">
        select id from t_printfile where status=#{status}
          and isdelete=#{isDelete}
          and path &lt;&gt; ''
    </select>
    <!--找到三天后待打印，已上传文件ids-->
    <select id="findPidsBy3Days" parameterType="java.util.Map" resultType="int">
        select id from t_printfile
          where overduetime &lt; #{overdueTime}
          and status=#{status1} or status=#{status2}
          and path &lt;&gt; ''
    </select>
    <!--找到三天后已打印文件ids-->
    <select id="findPidsBy3DaysPrinted" parameterType="java.util.Map" resultType="int">
        select id from t_printfile
          where overduetime &lt; #{overdueTime}
          and status=#{status}
          and isdelete=#{isDelete}
          and path &lt;&gt; ''
    </select>

</mapper>